2 big questions
	- How to handle arp flooding
		. the arp seems only to happen with ip addresses within the same subnet
			[.] do I simply return the mac of the router itself
			[.] or do I return the real make of the destination ip
				- If I return the real make of the destination ip then when performing ping between 2 hosts in the same subnet the dest_mac_addr will be of the destination host rather than the router which by definiation should be dropped

	- Is it normal to make the idle_timeout=0 for the flow-entry that sends packets to the controller
		. as by default it is set to 60 seconds of inactivity

	- If the firewall dropped a packet in a router does it have to return some icmp error
		. Because when tcp is blocked for h3 and h4 curl never terminates
		. Also, ask about the default blocking behaviour of the firewall
		. Is it a good idea to have the firewall rules in the router never destroyed

	- can a flow table create icmp packets locally
		. the controller is the one responsible for creating the packets

	- when ttl is equal to zero should the packet be sent back to the controller to construct the icmp packet

	- I don't understand the difference icmp dest unreachable codes
		. if a packet enters a router that is destined for an IP within a subnet unknown to it, WHAT DOES THIS MEAN?

	- I think first entery in the interface table is wrong it should be 112.97.37.1 instead probably
		. "0000000000000003": [
    			{
      				"port": 1,
      				"hw": "00:dd:dd:dd:dd:aa",
      				"ip": "112.97.37.9"
    			},
    			{
      				"port": 3,
      				"hw": "00:dd:dd:dd:dd:cc",
      				"ip": "1.2.3.1"
    			},
    			{
      				"port": 2,
      				"hw": "00:dd:dd:dd:dd:bb",
      				"ip": "88.42.191.2"
    			}
  		]

	- If I treat r1 as a switch for traffic in the subnet 10.0.0.0/24 then how can I ping from h1 to r1

	- When I do a ping to a router do I need to check if the src ip address matches any of the router interfaces or only the in_port ip address by which the router received the packet
		. Example h1 ping 1.2.3.1
		. the icmp packet will reach r2 via port 2 which has ip 88.42.191.2 so in that case should r2 reply

	- I assumed always that if a router recives a packet that the src_mac and dst_mac in the ethernet header will alwasy have enteries in the arp table
		. The main reason it to implement the logic of subnets
		. Is that an okay assumption to make for this coursework
		. Even in the routing steps it assumes that the arp will have an entry for the next hop {page 2, step 3}
		. Imagine arp doesn't have arp entry for normal routers what will happen

	- If I did a ping to a router within the same subnet it will act as a switch "r1 specifically", then how could it respond to ping responses

	- What happens if I tried to arp from h1 to h4 for me the code just dies
		. For some reason r2 doesn't receive arp packets from r1 even though r1 might be flooding

	- Why when I ping from h1 to h2 I received at the end 2 arp packets from the controller

	- When r1 acts as a switch should it go through the high-priority firewall rules in table 0, or should I place the switch flow-mods with much higher priority than the firewall rules themselves, or just examine the firewall rules anyway and add the flow-mods for the switch to table 1

	- Is it reasonable to only handle the case of (ttl == 1) instead of (ttl <= 1), because I couldn't find anyway to create an OFPMatch that matches based on (ttl <= 1) only strict equality is possible

	- When r1 acts as a switch which should be checked first the switch rules or the ttl rules
		. In my code the switch rules are checked first before the ttl rules (it that reasonable)

	- I think there might be a bug in interfaces.json for r3 first entry

>>>> Document why you have choosen specific values in the code
	. Add explanation why you have firewall rules never die and how they work
	. Add explanation why you have the time for the mismatch rule to be 0, else the router will not be able to communicate with the controller
	. add explanation why do you split the ips for h3 and h4, although in the routing table only a single wildcarded entery is added the reason is that we will modify the dst_mac address of the destination host and that is why we can't add a wildcard 
	. add explnation about the switching logic used for task 1

=========================================================================
=========================================================================
=========================================================================

Plan:
	- add a condition to the router logic that handles the case if it receives a ping request use 0/0

	- finally go through your questions if something is unimportant delete it
		. if something is important and you understand it comment it in your code for the marker
		. if something is new leave it as it is

	- (OPTIONAL) try to reason about how to make the code structure better

	- (OPTIONAL) check the validity of task 1 + 3 and check the flow-tables

	- (OPTIONAL) comment your code

	- Used additional libraries dest_unreach + TimeExceeded

	- (OPTIONAL) implement the methods to receive the pkt_info instead of creating a new object and passing it to the constructor

	- You might want to add a flow for mac router mismatch

	- reason about the below questions for task 1
		if arp we just flood (or we could return the mac associated with us not sure!!!)
        	"""
            		Later that should be updated to handle 2 cases
                	2. If we have received arp you can directly retrun the mac address from the ARP Table in the router without flooding
                	3. As a switch if it received an arp request it should return the mac address from its arp-table
        	"""

